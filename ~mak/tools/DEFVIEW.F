
\ - UCOMPARE : UCOMPARE COMPARE ;
22 CELLS CONSTANT VIEW_FSTACK_SIZE
CREATE VIEW_FSTACK 0 , 0 , VIEW_FSTACK_SIZE ALLOT

: SNFAFIND ( addr len --- 0| nfa )
  CONTEXT
  BEGIN	DUP @ \ DUP H.
  WHILE	>R
	2DUP  R@  @  SEARCH-NFA ?DUP
	IF    RDROP NIP NIP EXIT \ Exit if found.
	THEN
	R> CELL+
  REPEAT @ NIP NIP
;


: SEARCH-NFAU ( c-addr u wid --- 0 | nfa )
	@
	BEGIN   DUP
	WHILE
	>R 2DUP	R@ COUNT CEQUAL-U
		IF 2DROP R>
		BREAK
 	R> CDR
	REPEAT
	2DROP DROP 0 \ Not found.
;

' SEARCH-NFAU  TO SEARCH-NFA


(*
: VIEW_SEARCHz. ( adr len -- nfa path | 0  )
  SNFAFIND
 DUP 0= IF BREAK
  VIEW_LINK
 BEGIN  DUP WHILE
	DUP CELL+ @
	IF cr	 dup h. dup CELL+ CELL+ COUNT TYPE
	   VIEW_FSTACK VIEW_FSTACK CELL+ VIEW_FSTACK_SIZE MOVE
		DUP VIEW_FSTACK !
	ELSE cr \ VIEW_FSTACK @ h. OVER H.
		2DUP H. H.
		2DUP U>
		IF OVER VIEW_FSTACK @ DUP H. U<
		  IF DROP VIEW_FSTACK @ CELL+ CELL+
		  BREAK
		THEN
		VIEW_FSTACK CELL+ VIEW_FSTACK VIEW_FSTACK_SIZE MOVE
	THEN
	@
 REPEAT
 NIP
;
*)

: NFA2PATH ( adr len -- nfa path | 0  )
  VIEW_LINK
 BEGIN  DUP WHILE
	DUP CELL+ @
	IF	VIEW_FSTACK VIEW_FSTACK CELL+ VIEW_FSTACK_SIZE MOVE
		DUP VIEW_FSTACK !
	ELSE
		2DUP U>
		IF OVER VIEW_FSTACK @ U<
		  IF DROP VIEW_FSTACK @ CELL+ CELL+
		  BREAK
		THEN
		VIEW_FSTACK CELL+ VIEW_FSTACK VIEW_FSTACK_SIZE MOVE
	THEN
	@
 REPEAT
 NIP
;

: VIEWS_SEARCH ( adr len -- nfa path | 0  )
  SNFAFIND
 DUP 0= IF BREAK
  NFA2PATH
;

(
ALSO EDIT-MOD
: E>   PARSE-NAME VIEWS_SEARCH ?DUP
  IF  NEXT_F COUNT EDIT_FN! NAME>F 4 + L@ 0 SWAP EDIT_XY! EDIT  THEN  
;
PREVIOUS
)